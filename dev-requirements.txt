# Pip requirements file for development dependencies.
#
# The order of packages is significant, because pip processes them in the order
# of appearance. Changing the order has an impact on the overall integration
# process, which may cause wedges in the gate later.

# Make sure that the package versions in minimum-constraints.txt are also
# the minimum versions required in requirements.txt and dev-requirements.txt.


# Runtime dependencies:
-r requirements.txt


# Unit test:
# pytest 5.0.0 has removed support for Python < 3.5
# pytest 4.3.1 solves an issue on Python 3 with minimum package levels
pytest>=4.3.1,<5.0.0; python_version < '3.5'
pytest>=4.3.1; python_version >= '3.5' and python_version <= '3.6'
pytest>=4.4.0; python_version >= '3.7'

# colorama 0.4.3 has removed support for Python < 3.5
colorama>=0.4.0; sys_platform == "win32" and python_version == "2.7"
colorama>=0.4.0,<0.4.2; sys_platform == "win32" and python_version == "3.4"
colorama>=0.4.0; sys_platform == "win32" and python_version >= "3.5"

# Coverage reporting (no imports, invoked via coveralls script):
# We exclude Python 3.4 from coverage testing and reporting.
# coverage 5.0 has removed support for py34
coverage>=5.0; python_version == '2.7' or python_version >= '3.5'
pytest-cov>=2.7.0; python_version == '2.7' or python_version >= '3.5'
# coveralls 2.0 has removed support for Python 2.7 and 3.4
git+https://github.com/andy-maier/coveralls-python.git@andy/add-py27#egg=coveralls; python_version == '2.7'
# TODO: Remove coveralls pinning to <3.0.0 once fixed (TheKevJames/coveralls-python#252)
coveralls>=2.1.2,<3.0.0; python_version >= '3.5'
# PyYAML: covered in direct deps for development

# Sphinx (no imports, invoked via sphinx-build script):
Sphinx>=1.7.6,<2.0.0; python_version < '3.5'  # BSD
Sphinx>=1.7.6,<2.0.0; python_version >= '3.5'  # BSD
# TODO: On py3.5+, Sphinx currently fails, see issue
#       https://github.com/sphinx-doc/sphinx/issues/6246. Therefore, Sphinx has
#       been pinned to below 2.0.0 also for py3.5+.
sphinx-git>=10.1.1 # GPL
GitPython>=2.1.1 # BSD
# Pygments 2.4.0 has removed support for Python 3.4
Pygments>=2.1.3; python_version == '2.7'
Pygments>=2.1.3,<2.4.0; python_version == '3.4'
Pygments>=2.1.3; python_version >= '3.5'

# readme-renderer (used by twine, uses Pygments)
# readme-renderer 25.0 has removed support for Python 3.4 (and requires Pygments 2.5.1 which also removed that)
readme-renderer>=21.0; python_version == '2.7'
readme-renderer>=21.0,<25.0; python_version == '3.4'
readme-renderer>=21.0; python_version >= '3.5'

# PyLint (no imports, invoked via pylint script)
# Pylint requires astroid
# Pylint 1.x / astroid 1.x supports py27 and py34/35/36
# Pylint 2.0 / astroid 2.0 removed py27, added py37
# Pylint 2.4 / astroid 2.3 removed py34
pylint>=1.6.4,<2.0.0; python_version == '2.7'
pylint>=2.2.2,<2.4; python_version == '3.4'
pylint>=2.5.0; python_version >= '3.5'
astroid>=1.4.9,<2.0.0; python_version == '2.7'
astroid>=2.1.0,<2.3; python_version == '3.4'
astroid>=2.4.0; python_version >= '3.5'
# typed-ast 1.4.0 removed support for Python 3.4.
typed-ast>=1.3.0,<1.4.0; python_version == '3.4' and implementation_name=='cpython'
typed-ast>=1.4.0,<1.5.0; python_version >= '3.5' and python_version < '3.8' and implementation_name=='cpython'

# Flake8 (no imports, invoked via flake8 script):
flake8>=3.7.0 # MIT
# Note: Flake8 requires pyflakes>=2.1.0 and pycodestyle>=2.5.0, but for reasons
#       not understood, the resulting installation has pycodestyle 2.2.0,
#       causing issues. Workaround is to specify these dependencies here.
pyflakes>=2.1.0 # MIT
pycodestyle>=2.5.0 # MIT

# Twine (no imports, invoked via twine script):
twine>=1.8.1 # Apache-2.0

# Unit test (indirect dependencies):
# Pluggy 0.12.0 has a bug causing pytest plugins to fail loading on py38
pluggy>=0.7.1; python_version >= '2.7' and python_version <= '3.6'
pluggy>=0.13.0; python_version >= '3.7'


# Indirect dependencies (normally commented out, only listed to document their license):

# alabaster # BSD, from Sphinx
# atomicwrites # TBD
# attrs # TBD
# Babel # BSD, from Sphinx
# backports.functools-lru-cache # MIT, from pylint
# bleach # Apache, from ???
# configparser # MIT, from pylint and from flake8 for py<3.2
# contextlib2 # TBD
# coverage # Apache-2.0, from pytest-cov
# docutils # public domain | Python | 2-Clause BSD | GPL 3, from Sphinx
# entrypoints # MIT, from ???
# enum34 # BSD, from astroid
# funcsigs # Apache, from mock for py<3.3
# functools32 # PSFL, from ???
# futures # TBD
# gitdb2 # BSD, from GitPython
# imagesize # MIT, from Sphinx
# importlib-metadata # TBD
# isort # MIT, from pylint
# Jinja2 # BSD, from Sphinx
# keyring # TBD
# lazy-object-proxy # BSD, from astroid
# MarkupSafe # BSD, from Jinja2 -> Sphinx
# mccabe # MIT, from pylint and from flake8
# more-itertools # TBD
# packaging # TBD
# pathlib2 # MIT, from ???
# pkginfo # MIT, from twine
# py # MIT, from pytest
# pyparsing # TBD
# readme-renderer # TBD
# requests-toolbelt # Apache 2.0, from twine
# scandir # New BSD, from pathlib2 for py<3.6 -> pytest
# singledispatch # MIT, from pylint
# smmap2 # BSD, from gitdb2 -> GitPython
# snowballstemmer # BSD, from Sphinx
# sphinxcontrib-websupport # BSD, from Sphinx>=1.6.1
# tqdm # MPL 2.0, MIT, from twine>=1.9.1
# typing # PSFL, from Sphinx>=1.6.1 for py<3.5
# webencodings # BSD, from ???
# wrapt # BSD, from astroid
# zipp # TBD
